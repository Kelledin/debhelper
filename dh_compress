#!/usr/bin/perl -w
#
# Compresses files and makes sure that symlinks pointing to the 
# compressed files get fixed.

use Cwd;
BEGIN { push @INC, "debian", "/usr/lib/debhelper" }
use Dh_Lib;
init();

foreach $PACKAGE (@{$dh{DOPACKAGES}}) {
	$TMP=tmpdir($PACKAGE);
	$compress=pkgfile($PACKAGE,"compress");

	# Run the file name gathering commands from within the directory
	# structure that will be effected.
	$olddir=getcwd();
	chdir($TMP) || error("Can't cd to $TMP: $!");

	# Figure out what files to compress.
	@files=();
	# First of all, deal with any files specified right on the command line.
	if (($PACKAGE eq $dh{FIRSTPACKAGE} || $dh{PARAMS_ALL}) && @ARGV) {
		push @files,#ARGV;
	}
	if ($compress) {
		# The config file is a sh script that outputs the files to be compressed
		# (typically using find).
		push @files, split(/\n/,`sh $olddir/$compress 2>/dev/null`);
	}
	else {
		# By default, fall back to what the policy manual says to compress.
		push @files, split(/\n/,`
			find usr/info usr/man usr/X11*/man -type f ! -name "*.gz" 2>/dev/null || true;
			find usr/doc -type f \\( -size +4k -or -name "changelog*" \\) \\
				! -name "*.htm*" ! -name "*.gif" ! -name "*.gz" \\
				! -name "copyright" 2>/dev/null || true
		`);
	}

	# Exclude files from compression.
	if (@files && defined($dh{EXCLUDE}) && $dh{EXCLUDE}) {
		@new=();
		foreach (@files) {
			$ok=1;
			foreach $x (@{$dh{EXCLUDE}}) {
				if (/\Q$x\E/) {
					$ok='';
					last;
				}
			}
			push @new,$_ if $ok;
		}
		@files=@new;
	}

	if (@files) {
		doit("gzip","-9f",@files);
	}

	chdir($olddir);

	# Fix up symlinks that were pointing to the uncompressed files.
	open (FIND,"find $TMP -type l |");
	while (<FIND>) {
		chomp;
		($directory)=m:(.*)/:;
		$linkval=readlink($_);
		if (! -e "$directory/$linkval" && -e "$directory/$linkval.gz") {
			doit("rm","-f",$_);
			doit("ln","-sf","$linkval.gz","$_.gz");
		}
	}
}
