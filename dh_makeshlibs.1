.TH DH_MAKESHLIBS 1 "" "Debhelper Commands" "Debhelper Commands"
.SH NAME
dh_makeshlibs \- automatically create shlibs file
.SH SYNOPSIS
.B dh_makeshlibs
.I "[debhelper options] [-mmajor] [-V[dependancies]]"
.SH "DESCRIPTION"
dh_makeshlibs is a debhelper program that automatically scans for shared
libraries, and generates a shlibs file for the libraries it finds.
.P
For this program to work, you cannot have already installed a DEBIAN/shlibs
file. If such a file exits, the program will exit with an error.
.SH OPTIONS
.TP
.B debhelper options
See
.BR debhelper (1)
for a list of options common to all debhelper commands.
.TP
.B \-mmajor, \--major=major
Instead of trying to guess the major number of the library from the filename
of the library, use the major number specified after the -m parameter.
.TP
.B \-V[dependancies], \--version-info, \--version-info=dependancies
By default, the shlibs file generated by this program does not make packages
depend on any particular version of the package containing the shared
library. It may be necessary for you to add some version dependancy
information to the shlibs file. If -V is specified with no dependancy
information, the current version of the package is plugged into a dependancy
that looks like "packagename (>= packageversion)". If -V is specified with
parameters, the parameters can be used to specify the exact dependancy
information needed (be sure to include the package name).
.SH EXAMPLES
.TP
.B dh_makeshlibs
Assuming this is a package named libfoobar1, generates a shlibs file that
looks something like:
  libfoobar 1 libfoobar1
.TP
.B dh_makeshlibs \-V
Assuming the current version of the package is 1.0-3, generates a shlibs
file that looks something like:
  libfoobar 1 libfoobar1 (>= 1.0-3)
.TP
.B dh_makeshlibs \-V "'libfoobar1 (>= 1.0)'"
Generates a shlibs file that looks something like:
  libfoobar 1 libfoobar1 (>= 1.0)
.SH ENVIRONMENT
See
.BR debhelper (1)
for a list of environment variables that affect all debhelper commands.
.SH "SEE ALSO"
.BR debhelper (1)
.SH BUGS
There is no guarantee that the program will get the shlibs file right. For
example, it may not correctly guess the major number of your package. In
cases like these (and perhaps in general, just to be safe), it is better to
create a debian/shlibs file by hand, or force it to use the correct major
number by specifying the -m parameter.
.P
This is a "do what I Mean" type program - you have been warned!
.SH AUTHOR
Joey Hess <joeyh@master.debian.org>
